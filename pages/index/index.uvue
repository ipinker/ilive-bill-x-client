<template>
	<view class="content">
		<image class="logo" src="/static/logo.png"></image>
		<text class="title">{{title}}</text>	
		<Iicon icon="close"/>
		<view @click="handleChangeTheme">
			<text :style="[font('gray1')]" class="title">change theme</text>
		</view>
		<view @click="openPopup">
			Open popup
		</view>
		<button type="default" @click="handleOpen">Open</button>
		<button type="default" @click="handleClose">Close</button>
		<ITransition ref="transitionRef" :duration="600">
			<view class="TransitionView">
				112233
			</view>
		</ITransition>
	</view>
</template>

<script lang="uts" setup>
	import { useThemeStore } from "@/uni_modules/i-ui-x/theme"
	import { useStyle } from "@/uni_modules/i-ui-x/hooks/useStyle"
	const { theme, changeMode } = useThemeStore();
	const { font } = useStyle();
	const list = ref([])
	
	
	function openPopup() {
		
	}
	
	const title = "Title value"
	const titleColor = computed<string>((): string => theme.value?.colorPrimaryText)
	const bgColor = computed<string>(() => theme.value?.colorBgContainer)
	function handleChangeTheme() {
		changeMode()
	}
	const transitionRef: Ref<ITransitionComponentPublicInstance | null> = ref(null);
	function handleOpen() {
		nextTick(() => {
			transitionRef.value?.open();
		})
	}
	function handleClose() {
		transitionRef.value?.close();
	}
</script>

<style lang="scss">
	.content {
		min-height: 100%;
		min-width: 100%;
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.logo {
		height: 200rpx;
		width: 200rpx;
		margin-top: 200rpx;
		margin-bottom: 50rpx;
	}

	.title {
		font-size: 36rpx;
	}
	
	.TransitionView {
		width: 300rpx;
		height: 200rpx;
		background-color: red;
	}
</style>
